<?xml version="1.0" encoding="UTF-8"?>
<!--
    License CC BY-NC-SA 3.0

   This work is licensed under the
   "Namensnennung – Keine kommerzielle Nutzung – Weitergabe unter
    gleichen Bedingungen 3.0 Deutschland (CC BY-NC-SA 3.0)"
   http://creativecommons.org/licenses/by-nc-sa/3.0/de/deed.de

   Read the English translation here:

   "Attribution-NonCommercial-ShareAlike 3.0 Unported (CC BY-NC-SA 3.0)"
   http://creativecommons.org/licenses/by-nc-sa/3.0/

-->
<!--<?xml-model href="file:../5.1/dbref.rnc" type="application/relax-ng-compact-syntax"?>-->

<section xml:id="dbc.common.l10n" remap="topic" userlevel="easy"
   xmlns="http://docbook.org/ns/docbook"
   xmlns:xi="http://www.w3.org/2001/XInclude"
   xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Extending Language Files with Your Own Text</title>
  <info>
    <definitions definitionfile="defs.xml"/>
    <keywordset>
      <keyword>l10n</keyword>
      <keyword>translation</keyword>
      <keyword>language files</keyword>
      <keyword>local.l10n.xml</keyword>
      <keyword>context</keyword>
      <keyword>gentext</keyword>
      <keyword>http://docbook.sourceforge.net/xmlns/l10n/1.0</keyword>
    </keywordset>
    <subjectset>
      <subject>
        <subjectterm>l10n</subjectterm>
        <subjectterm>languages</subjectterm>
      </subject>
    </subjectset>
  </info>

  <section role="problem">
    <title>Problem</title>
    <para>You need a general solution to add localized text without
      hard-coding it into your stylesheet. Depending on the language, it
      should display the correct, translated text.</para>
  </section>
  <section role="solution">
    <title>Solution</title>
    <para>Use <emphasis>language files</emphasis> to add your text.
      Language files are the DocBook way to support several languages,
      all located under the <filename class="directory"
        >common</filename> directory. Each file is in XML format and
      contains all your translated text as a key/value pair. For more
      complex settings and to group things, there are
        <emphasis>contexts</emphasis>. The key is never translated, it is
      a constant and is only needed to find and retrieve the translated text. </para>
    <para>To use a language file, proceed as follows:</para>
    <procedure>
      <title>Adding Your Own Localized Text</title>
      <step>
        <para>Create a customization layer first as shown in <xref linkend="dbc.common.dbcustomize"/>.</para>
      </step>
      <step>
        <para>Add the parameter <parameter>local.l10n.xml</parameter> in
          your customization layer and point it to your language
          file (in this case, it is named
          <filename>myl10n.xml</filename>, but you can use any name you
          like):</para>
        <screen>&lt;xsl:param name="local.l10n.xml" select="document('myl10n.xml')"/></screen>
      </step>
      <step>
        <para>Open the <filename>myl10n.xml</filename> file and insert
        the following XML code as an example:</para>
        <informalexample>
          <info>
            <output xmlns="urn:x-toms:docbook-ext">
              <filename>l10n.xml</filename>
            </output>
          </info>
        <programlisting linenumbering="numbered" language="xml"
          >&lt;l:i18n xmlns:l="http://docbook.sourceforge.net/xmlns/l10n/1.0">
  &lt;l:l10n language="en" english-language-name="English">
    &lt;l:gentext key="Authors" text="Authors"/>
    &lt;l:gentext key="lastbuilt" text="Last built: "/>
  &lt;/l:l10n>
  &lt;l:l10n language="de" english-language-name="German">
    &lt;l:gentext key="Authors" text="Autoren"/>
    &lt;l:gentext key="lastbuilt" text="Zuletzt gebaut: "/>
  &lt;/l:l10n>
&lt;/l:i18n></programlisting>
        </informalexample>
        <para>The above code shows two languages, English and German
          (marked in the <tag class="attribute">language</tag>
          attribute).
          Furthermore, it contains two text entries for each language
            (<quote>Authors</quote> and <quote>lastbuilt</quote>).</para>
      </step>
      <step>
        <para>Call <function>gentext</function> in your template to retrieve
        the translated text:</para>
        <programlisting language="xml">&lt;xsl:call-template name="gentext">
  &lt;xsl:with-param name="key" select="'Authors'"/>
&lt;/xsl:call-template></programlisting>
      </step>
    </procedure>
  </section>
  <section role="discussion">
    <title>Discussion</title>
    <para>The <quote>gentext</quote> method to insert language specific
      text is quite powerful, but not almighty. It helps you to keep
      translatable text in one place and avoids hard-coded locations in
      your stylesheets. If you need the translated text not for the
      default language (usually marked in the root element), but for a
      different language, use the <tag>xsl:with-param</tag> as
      shown:</para>
    <programlisting language="xml">&lt;xsl:call-template name="gentext">
  &lt;xsl:with-param name="key" select="'Authors'"/>
  &lt;xsl:with-param name="lang">de&lt;/xsl:with-param>
&lt;/xsl:call-template></programlisting>
  </section>
  <section role="seealso">
    <title>See Also</title>
    <para><link xlink:href="http://www.sagehill.net/docbookxsl/Localizations.html"/></para>
  </section>
</section>
