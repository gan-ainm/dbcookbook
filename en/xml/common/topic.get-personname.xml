<?xml version="1.0" encoding="UTF-8"?>
<!--
    License CC BY-NC-SA 3.0

   This work is licensed under the
   "Namensnennung – Keine kommerzielle Nutzung – Weitergabe unter
    gleichen Bedingungen 3.0 Deutschland (CC BY-NC-SA 3.0)"
   http://creativecommons.org/licenses/by-nc-sa/3.0/de/deed.de

   Read the English translation here:

   "Attribution-NonCommercial-ShareAlike 3.0 Unported (CC BY-NC-SA 3.0)"
   http://creativecommons.org/licenses/by-nc-sa/3.0/

-->
<!--<?xml-model href="file:../5.1/dbref.rnc" type="application/relax-ng-compact-syntax"?>-->

<section xml:id="dbc.common.get-personname" remap="topic"
   userlevel="easy"
   xmlns="http://docbook.org/ns/docbook"
   xmlns:xi="http://www.w3.org/2001/XInclude"
   xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Extracting and Formatting Person and Author Information</title>
  <info>
    <definitions definitionfile="defs.xml"/>
    <keywordset>
      <keyword>author</keyword>
      <keyword>authorgroup</keyword>
      <keyword>personname</keyword>
      <keyword>person.name</keyword>
    </keywordset>
  </info>

  <section role="problem">
    <title>Problem</title>
    <para>You need to format an author, a group of authors, or any other
      name of persons.</para>
  </section>
  <section role="solution">
    <title>Solution</title>
    <para>The DocBook stylesheets provide the template
      <function>person.name</function> for a single name or
      <function>person.name.list</function> for a group of names. For example,
      consider the following <tag>info</tag> element:</para>
    <programlisting language="xml">&lt;info>
  &lt;author>
    &lt;personname>
      &lt;firstname>Tux&lt;/firstname>
      &lt;surname>Penguin&lt;/surname>
    &lt;/personname>
  &lt;/author>
&lt;/info></programlisting>
    <para>To retrieve the author name, use the following code in your
      template:</para>
    <programlisting language="xml">&lt;xsl:call-template name="person.name">
  &lt;xsl:with-param name="node" select="$theauthor"/>
&lt;/xsl:call-template></programlisting>
    <para>where the variable <varname>theauthor</varname> points to
      the author node. The previous template returns the expected
      string:</para>
    <programlisting>Tux Penguin</programlisting>
    <para>For a group of names it is similar, just replace
        <function>person.name</function> with
        <function>person.name.list</function>. </para>

  </section>
  <section role="discussion">
    <title>Discussion</title>
    <para>At first glance, names seem pretty easy to format.
      However, it is a little bit more complicated. For example, the title
      of a person, its lineage, or middle names can make
      it sometimes harder to extract all the information. The following
      author contains a title and a lineage:</para>
    <programlisting language="xml">&lt;author>
  &lt;personname>
    &lt;honorific>Dr.&lt;/honorific>
    &lt;firstname>Tux&lt;/firstname>
    &lt;othername>Tuxy&lt;/othername>
    &lt;surname>Penguin&lt;/surname>
    &lt;lineage>Jr.&lt;/lineage>
  &lt;/personname>
&lt;/author></programlisting>
    <para>Depending on what you need, the DocBook stylesheets can format
    the name in different ways</para>
    <table xml:id="tab.get-personname">
      <title>Overview of Available Templates</title>
      <tgroup cols="2">
        <thead>
          <row>
            <entry>Template</entry>
            <entry>Result</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><function>person.name</function></entry>
            <entry><screen>Dr. Tux Tuxy Penguin, Jr</screen></entry>
          </row>
          <row>
            <entry><function>person.name.last-first</function></entry>
            <entry><screen>Penguin, Tux</screen></entry>
          </row>
          <row>
            <entry><function>person.name.family-given</function></entry>
            <entry><screen>Penguin Tux [FAMILY Given]</screen></entry>
          </row>
        </tbody>
      </tgroup>
    </table>

    <para>Keep in mind, the current implementation only takes into
      account the first occurrence of <tag>honorific</tag> or
      <tag>lineage</tag>.</para>

  </section>
</section>
